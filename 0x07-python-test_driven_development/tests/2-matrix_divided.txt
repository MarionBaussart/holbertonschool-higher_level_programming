The ''2-matrix_divided'' module
===========================

Using ''matrix_divided'', function that divides all elements of a matrix,
prototype: def matrix_divided(matrix, div):
-----------------------------------------------------------

Importing function matrix_divided from module 2-matrix_divided:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Divide by 3:
------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Divide by 3.4:
--------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3.4)
    [[0.29, 0.59, 0.88], [1.18, 1.47, 1.76]]

Matrix contain a non int or float as element:
---------------------------------------------
    >>> matrix_divided([['a', 2, 3], [4, 5, 6]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix rows haven't the same size:
----------------------------------
    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Divide by a non int or float:
-----------------------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'a')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Divide by 0:
------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Passing an empty matrix:
------------------------
    >>> matrix_divided([], 3)
    []

Passing not enought arguments:
------------------------------
    >>> matrix_divided(3)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
