The ''0-add_integer'' module
===========================

Using ''add_integer'', prototype: def add_integer(a, b=98):
-----------------------------------------------------------

Importing function add_integer from module 0-add_integer:
    >>> add_integer = __import__('0-add_integer').add_integer

Addition or substraction of int and float:
------------------------------------------
    >>> add_integer(3, 7)
    10

    >>> add_integer(3, -7)
    -4

    >>> add_integer(3.1, 7)
    10

Addition or substraction of int or float and a char or string:
--------------------------------------------------------------
    >>> add_integer('a', 7)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(3, "hello")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Overflow:
---------
    >>> add_integer(float('inf'), 3)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Passing one argument:
---------------------
    >>> add_integer(3)
    101

Passing None:
-------------
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
